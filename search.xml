<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>SSH远程登录Mac</title>
      <link href="/2019/04/26/SSH%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95Mac/"/>
      <url>/2019/04/26/SSH%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95Mac/</url>
      
        <content type="html"><![CDATA[<ol><li><p>macOS的Terminal自带ssh，可通过whereis查看:<code>whereis ssh</code>。</p></li><li><p>启用SSHD服务<br>进入“系统偏好设置(System Preferences)”-&gt;选择“共享(Sharing)”-&gt;勾选“远程登录(Remote Login)”<br><br>完成后可用<code>ssh localhost</code>进行测试，如果提示输入密码认证就没问题了。</p></li><li><p>SSH和SCP</p><ul><li>ssh连接其他主机：<br><br><code>ssh username@192.168.1.1</code><br><br>username为要登录的主机名,192.168.1.1为要登录主机的IP地址</li><li>scp文件传输<br><br>scp的简单使用如下:<br><br><code>scp filename username@192.168.1.1:/tmp</code><br><br><strong> 不过一开始我没有传到/tmp目录下，遇到了Permission denied的问题， </strong><br><br>查了一些资料发现可能是那个目录没有操作权限的问题，默认的操作权限在/tmp目录下。</li></ul></li></ol>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>Vue常用属性</title>
      <link href="/2019/04/23/Vue%E5%B8%B8%E7%94%A8%E5%B1%9E%E6%80%A7/"/>
      <url>/2019/04/23/Vue%E5%B8%B8%E7%94%A8%E5%B1%9E%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<h2 id="Vue-js的7个常用属性"><a href="#Vue-js的7个常用属性" class="headerlink" title="Vue.js的7个常用属性"></a>Vue.js的7个常用属性</h2><ul><li>el<br><em>用来指示vue编译器从什么地方开始解析 vue的语法，可以说是一个占位符。</em></li><li>data<br><em>用来组织从view中抽象出来的属性，可以说将视图的数据抽象出来存放在data中。</em></li><li>template<br><em>用来设置模板，会替换页面元素，包括占位符。</em></li><li>methods<br><em>页面的业务逻辑，存放js方法</em></li><li>render<br><em>创建虚拟DOM</em></li><li>computed<br><em>计算属性</em></li><li>watch<br><em><code>watch:function(newValue,oldValue){}</code><br>监听data中数据的变化，参数包含旧值和新值</em></li></ul>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>div的父子关系</title>
      <link href="/2019/04/21/div%E7%9A%84%E7%88%B6%E5%AD%90%E5%85%B3%E7%B3%BB/"/>
      <url>/2019/04/21/div%E7%9A%84%E7%88%B6%E5%AD%90%E5%85%B3%E7%B3%BB/</url>
      
        <content type="html"><![CDATA[<h2 id="子div有内容，父div的高度为何为0？"><a href="#子div有内容，父div的高度为何为0？" class="headerlink" title="子div有内容，父div的高度为何为0？"></a>子div有内容，父div的高度为何为0？</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        .a&#123;    </span></span><br><span class="line"><span class="undefined">            background-color: orange;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">        .b&#123;</span></span><br><span class="line"><span class="undefined">            height: 50px;</span></span><br><span class="line"><span class="undefined">            width: 50px;</span></span><br><span class="line"><span class="undefined">            background-color: blue;</span></span><br><span class="line"><span class="undefined">            float: left;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"a"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"b"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果图:<br><img src="/2019/04/21/div的父子关系/diva.png" alt="div a"><br>一个父视图包含一个子视图，子div有高度，父div高度为0</p><h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>当一个元素只包含浮动元素的时候，它会出现高度折叠,即元素的上下底边重合，和高度为0效果一样。</p><p>当子div用绝对定位时<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.b&#123;</span><br><span class="line">    height: 50px;</span><br><span class="line">    width: 50px;</span><br><span class="line">    background-color: blue;</span><br><span class="line">    position: absolute;</span><br><span class="line">    left: 70%;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>父div高度j依旧为0，因为子元素绝对定位脱离文档流，不会撑开父元素，父元素高度为0。</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><ul><li>overflow的hidden属性<br>父div添加overflow的hidden属性</li><li>添加一个空的div<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"a"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"b"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"clear: both;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p><strong>这种方法是添加一个空的div，这个div和浮动元素同一级别，且位于浮动元素的最后。它在这里并不具有实际意义，它的作用只是撑开div标签而已。</strong></p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>GRE整理</title>
      <link href="/2019/01/14/GRE%E6%95%B4%E7%90%86/"/>
      <url>/2019/01/14/GRE%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="GRE"><a href="#GRE" class="headerlink" title="GRE"></a>GRE</h1><p><em>19年1月14日起的GRE学习和复习笔记</em><br><em>顺带准备雅思第二次考试</em><br><strong>第一次考试计划时间：19年2月末三月初</strong> </p><hr><h2 id="参考书籍"><a href="#参考书籍" class="headerlink" title="参考书籍"></a>参考书籍</h2><ul><li>GRE考试官方指南第三版</li><li>黑宝书</li><li>杨鹏长难句教程</li></ul><h2 id="GRE的考试架构"><a href="#GRE的考试架构" class="headerlink" title="GRE的考试架构"></a>GRE的考试架构</h2><p><em>机考总时长约为3小时45分钟</em></p><ol><li><p>Analytical Writing 分析性写作 6分<br><strong>清楚有效地阐明和支持复杂观点，考察其他观点及论证</strong><br>两篇作文，Issue（立论文）和Argument（驳论文），每篇30分钟，共60分钟。</p></li><li><p>Verbal Reasoning 文字推理 170分<br><strong>分析和评估书面材料，综合材料信息，可以理解为传统的阅读理解</strong><br>2*20道题，每部分30分钟，共60分钟。</p></li></ol><ul><li>Reading Comprehension 阅读理解<br>单选、多选和选句子</li><li>Text Completion 段落完形填空<br>完型</li><li>Sentence Equivalence 同义句填空<br>六选二，选出两个合适的同义词填在句子中</li></ul><ol start="3"><li>Quantitative Reasoning 数量推理 170分<br><strong>基本的数学技能，对算数、代数和几何的基本数学概念的理解，数据分析</strong><br>2*20道题，每部分35分钟，共70分钟。<strong>有屏幕计算器功能</strong></li></ol><ul><li>Quantitative Comparison questions 数量比较题</li><li>Multiple-choice questions–Select One Answer Choice 单选题</li><li>Multiple-choice questions–Select One or More Answer Choices 多选题</li><li>Numeric Entry questions 数字填空题</li></ul><ol start="4"><li>Unscored 不计分部分<br>20题</li></ol><h2 id="复习规划"><a href="#复习规划" class="headerlink" title="复习规划"></a>复习规划</h2><ul><li>准备周期：六到八周<br><strong>第1-2周</strong>    1.14—1.27   每天做OG&gt;=2组的阅读和数学，黑宝书3个list。<strong>单词是关键</strong><br><strong>第3周</strong>       1.27—2.3     每天背2个list，杨鹏长难句教程，OG题&gt;=3组。<br><strong>第4周</strong>       2.4—2.10     每天尽力做section，后半段进入数学准备，看钱永强第二三部分逻辑解题方法。<br><strong>第5周</strong>       2.10—2.17   背单词本生僻字，继续钱永强，做精选LSAT逻辑组题。<br><strong>第6周</strong>       2.17—2.24   上午太傻类比反义大全，PP2 review填空大部分是重题，做题+总结。<br><strong>第7周</strong>       2.24—3.3     黑宝书每天过，看机经，练习。</li></ul><h2 id="每日迭代"><a href="#每日迭代" class="headerlink" title="每日迭代"></a>每日迭代</h2><p>2019-01.14      列计划，整理资料</p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>iOS开发页面传值的四种方式</title>
      <link href="/2018/12/21/iOS-valuePass-1/"/>
      <url>/2018/12/21/iOS-valuePass-1/</url>
      
        <content type="html"><![CDATA[<h1 id="iOS开发页面传值的四种方式"><a href="#iOS开发页面传值的四种方式" class="headerlink" title="iOS开发页面传值的四种方式"></a>iOS开发页面传值的四种方式</h1><p><em>前两天帮同学用swift解决了Block和代理传值，想到还没整理过OC的页面传值，原理都一样只是语法上的差异</em></p><hr><h3 id="一、属性传值"><a href="#一、属性传值" class="headerlink" title="一、属性传值"></a>一、属性传值</h3><p><strong>适合情况</strong>：页面A向页面B传值<br><strong>步骤</strong>：<br>1、B_VC.h中声明一个textString属性，用于接收传来的字符串<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#import &lt;UIKit/UIKit.h&gt;</span></span><br><span class="line"></span><br><span class="line">NS_ASSUME_NONNULL_BEGIN</span><br><span class="line"></span><br><span class="line">@interface B_VC : UIViewController</span><br><span class="line">@property (nonatomic , strong) NSString *textString;</span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">NS_ASSUME_NONNULL_END</span><br></pre></td></tr></table></figure></p><p>m中创建label用于显示<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">- (void) propertyValuePass&#123;</span><br><span class="line">    UILabel *label = [[UILabel alloc] initWithFrame:CGRectMake(SCREEN_WIDTH*0.25, SCREEN_HEIGHT*0.15, SCREEN_WIDTH*0.5, SCREEN_HEIGHT*0.05)];</span><br><span class="line">    label.backgroundColor = [UIColor purpleColor];</span><br><span class="line">    label.textColor = [UIColor whiteColor];</span><br><span class="line">    label.textAlignment = NSTextAlignmentCenter;</span><br><span class="line">    label.font = [UIFont systemFontOfSize:20];</span><br><span class="line">    label.numberOfLines = 0;</span><br><span class="line">    label.text = self.textString;</span><br><span class="line">    [self.view addSubview:label];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>2、A_VC中创建输入框和跳转按钮<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#import "A_VC.h"</span></span><br><span class="line"><span class="comment">#import "B_VC.h"</span></span><br><span class="line"><span class="comment">#define SCREEN_WIDTH ([[UIScreen mainScreen] bounds].size.width)</span></span><br><span class="line"><span class="comment">#define SCREEN_HEIGHT ([[UIScreen mainScreen] bounds].size.height)</span></span><br><span class="line">@interface A_VC ()</span><br><span class="line">@property(nonatomic , strong) UITextField *textField;</span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">@implementation A_VC</span><br><span class="line">- (void) viewDidLoad &#123;</span><br><span class="line">    [super viewDidLoad];</span><br><span class="line">    //输入框</span><br><span class="line">    self.textField = [[UITextField alloc] initWithFrame:CGRectMake(SCREEN_WIDTH*0.25, SCREEN_HEIGHT*0.15, SCREEN_WIDTH*0.5, SCREEN_HEIGHT*0.05)];</span><br><span class="line">    self.textField.backgroundColor = [UIColor purpleColor];</span><br><span class="line">    self.textField.placeholder = @<span class="string">"属性传值"</span>;</span><br><span class="line">    self.textField.textAlignment = NSTextAlignmentCenter;</span><br><span class="line">    self.textField.textColor = [UIColor whiteColor];</span><br><span class="line">    [self.view addSubview:self.textField];</span><br><span class="line">    // 创建一个轻拍手势，当点击屏幕任何一个地方，就取消键盘的第一响应，隐藏键盘</span><br><span class="line">    UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(handleTap:)];</span><br><span class="line">    [self.view addGestureRecognizer:tap];</span><br><span class="line">    //跳转按钮</span><br><span class="line">    UIButton *button = [UIButton buttonWithType:UIButtonTypeCustom];</span><br><span class="line">    button.frame = CGRectMake(SCREEN_WIDTH*0.25, SCREEN_HEIGHT*0.23, SCREEN_WIDTH*0.5, SCREEN_HEIGHT*0.05);</span><br><span class="line">    [button setTitle:@<span class="string">"下一页"</span> forState:UIControlStateNormal];</span><br><span class="line">    button.titleLabel.font = [UIFont systemFontOfSize:20];</span><br><span class="line">    button.backgroundColor = [UIColor purpleColor];</span><br><span class="line">    [button addTarget:self action:@selector(clickAction:) forControlEvents:UIControlEventTouchUpInside];</span><br><span class="line">    [self.view addSubview:button];</span><br><span class="line">&#125;</span><br><span class="line">//放弃作为第一响应者</span><br><span class="line">- (void) handleTap:(id)sender &#123;</span><br><span class="line">    [self.textField resignFirstResponder];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//页面跳转</span><br><span class="line">-(void) clickAction:(id)sender &#123;</span><br><span class="line">    //从storyboard拿页面</span><br><span class="line">    UIStoryboard *sb = [UIStoryboard storyboardWithName:@<span class="string">"Main"</span> bundle:[NSBundle mainBundle]];</span><br><span class="line">    B_VC *B = [sb instantiateViewControllerWithIdentifier:@<span class="string">"B"</span>];</span><br><span class="line">    B.textString = self.textField.text;</span><br><span class="line">    [self.navigationController pushViewController:B animated:YES];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure></p><p>效果</p><center class="half"><br><img src="/2018/12/21/iOS-valuePass-1/A1.png" height="330" width="190"><img src="/2018/12/21/iOS-valuePass-1/B1.png" height="330" width="190"><br></center><p><strong>属性传值的核心就是在一个页面通过使用另一个页面的属性，利用这个属性来保存需要传递的信息，从而达到在另一个页面能使用前一个页面传递过来的信息。</strong></p><h3 id="二、Block传值"><a href="#二、Block传值" class="headerlink" title="二、Block传值"></a>二、Block传值</h3><p><strong>适合情况</strong>：页面B向页面A传值<br><strong>步骤</strong>：<br>1、A页面创建一个用于显示B页面输入内容的label<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#import &lt;UIKit/UIKit.h&gt;</span></span><br><span class="line"></span><br><span class="line">NS_ASSUME_NONNULL_BEGIN</span><br><span class="line"></span><br><span class="line">@interface A_VC2 : UIViewController</span><br><span class="line">@property (nonatomic,retain) UILabel *label;</span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">NS_ASSUME_NONNULL_END</span><br></pre></td></tr></table></figure></p><p>2、B页面的.h文件里创建一个用于传值的Block，一个Block方法和一个textfield<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#import &lt;UIKit/UIKit.h&gt;</span></span><br><span class="line"></span><br><span class="line">NS_ASSUME_NONNULL_BEGIN</span><br><span class="line">typedef void (^ReturnTextBlock)(NSString *showText);</span><br><span class="line">@interface B_VC2 : UIViewController</span><br><span class="line">@property (nonatomic,retain) UITextField *tf;</span><br><span class="line"></span><br><span class="line">@property (nonatomic,copy) ReturnTextBlock returnTextBlock;//定义的一个Block属性</span><br><span class="line"></span><br><span class="line">- (void)returnText:(ReturnTextBlock)block;</span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">NS_ASSUME_NONNULL_END</span><br></pre></td></tr></table></figure></p><p>3、将传递过来的block赋值给自己的属性block，然后找一个时机给block传递数据，这里选取页面将要消失时传值<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#import "B_VC2.h"</span></span><br><span class="line"><span class="comment">#define SCREEN_WIDTH ([[UIScreen mainScreen] bounds].size.width)</span></span><br><span class="line"><span class="comment">#define SCREEN_HEIGHT ([[UIScreen mainScreen] bounds].size.height)</span></span><br><span class="line">@interface B_VC2 ()</span><br><span class="line"></span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">@implementation B_VC2</span><br><span class="line"></span><br><span class="line">- (void)viewDidLoad &#123;</span><br><span class="line">    [super viewDidLoad];</span><br><span class="line">    //定义一个输入框 将文字传给第一个界面，并且显示在前一个页面的UILabel上</span><br><span class="line">    self.tf = [[UITextField alloc]initWithFrame:CGRectMake(SCREEN_WIDTH*0.25, SCREEN_HEIGHT*0.15, SCREEN_WIDTH*0.5, SCREEN_HEIGHT*0.05)];</span><br><span class="line">    self.tf.backgroundColor = [UIColor blackColor];</span><br><span class="line">    self.tf.textColor = [UIColor whiteColor];</span><br><span class="line">    self.tf.textAlignment = NSTextAlignmentCenter;</span><br><span class="line">    self.tf.placeholder = @<span class="string">"请输入内容"</span>;</span><br><span class="line">    [self.view addSubview:self.tf];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/*在第一个界面传进来一个Block语句块的函数，把传进来的Block语句块保存到本类的实例变</span><br><span class="line">量returnTextBlock（.h中定义的属性）中，然后寻找一个时机调用*/</span><br><span class="line">-(void)returnText:(ReturnTextBlock)block&#123;</span><br><span class="line">    self.returnTextBlock = block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//而这个时机就是当视图将要消失的时候，需要重写：</span><br><span class="line">-(void)viewWillDisappear:(BOOL)animated&#123;</span><br><span class="line">    <span class="keyword">if</span> (self.returnTextBlock !=nil) &#123;</span><br><span class="line">    self.returnTextBlock(self.tf.text);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure></p><p>3、A页面c读取Blockd传递的数据并显示，要注意在跳转处赋值<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#import "A_VC2.h"</span></span><br><span class="line"><span class="comment">#import "B_VC2.h"</span></span><br><span class="line"><span class="comment">#define SCREEN_WIDTH ([[UIScreen mainScreen] bounds].size.width)</span></span><br><span class="line"><span class="comment">#define SCREEN_HEIGHT ([[UIScreen mainScreen] bounds].size.height)</span></span><br><span class="line">@interface A_VC2 ()</span><br><span class="line"></span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">@implementation A_VC2</span><br><span class="line"></span><br><span class="line">- (void)viewDidLoad &#123;</span><br><span class="line">    [super viewDidLoad];</span><br><span class="line">    //跳转按钮</span><br><span class="line">    UIButton *button = [UIButton buttonWithType:UIButtonTypeCustom];</span><br><span class="line">    button.frame = CGRectMake(SCREEN_WIDTH*0.25, SCREEN_HEIGHT*0.23, SCREEN_WIDTH*0.5, SCREEN_HEIGHT*0.05);</span><br><span class="line">    button.backgroundColor = [UIColor blackColor];</span><br><span class="line">    button.titleLabel.textColor = [UIColor whiteColor];</span><br><span class="line">    [button setTitle:@<span class="string">"下一页"</span> forState:UIControlStateNormal];</span><br><span class="line">    [button addTarget:self action:@selector(clickAction:) forControlEvents:UIControlEventTouchUpInside];</span><br><span class="line">    [self.view addSubview:button];</span><br><span class="line">    //label</span><br><span class="line">    self.label = [[UILabel alloc] initWithFrame:CGRectMake(SCREEN_WIDTH*0.25, SCREEN_HEIGHT*0.15, SCREEN_WIDTH*0.5, SCREEN_HEIGHT*0.05)];</span><br><span class="line">    self.label.backgroundColor = [UIColor blackColor];</span><br><span class="line">    self.label.textColor = [UIColor whiteColor];</span><br><span class="line">    self.label.textAlignment = NSTextAlignmentCenter;</span><br><span class="line">    [self.view addSubview:self.label];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void) clickAction:(id)sender&#123;</span><br><span class="line">    //从storyboard拿页面</span><br><span class="line">    UIStoryboard *sb = [UIStoryboard storyboardWithName:@<span class="string">"Main"</span> bundle:[NSBundle mainBundle]];</span><br><span class="line">    B_VC2 *B = [sb instantiateViewControllerWithIdentifier:@<span class="string">"B2"</span>];</span><br><span class="line">    //跳转处赋值</span><br><span class="line">    [B returnText:^(NSString * _Nonnull showText) &#123;</span><br><span class="line">    self.label.text = showText;</span><br><span class="line">    &#125;];</span><br><span class="line">    [self.navigationController pushViewController:B animated:YES];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure></p><p>效果</p><center class="half"><br><img src="/2018/12/21/iOS-valuePass-1/A2.png" height="330" width="190"><img src="/2018/12/21/iOS-valuePass-1/B2.png" height="330" width="190"><br></center><p><strong>Block传值是将值保存在代码块中，通过关联传递过来的代码块（页面一）与自己的属性代码块（页面二），以及使用代码块传值（页面二），回到页面一中，页面一回调代码块，以获取代码块传递过来的值。</strong></p>]]></content>
      
      
      
    </entry>
    
  
  
</search>
